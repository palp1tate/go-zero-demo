// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package usersrv

import (
	"context"

	"github.com/palp1tate/go-zero-demo/service/user/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginRequest     = pb.LoginRequest
	LoginResponse    = pb.LoginResponse
	RegisterRequest  = pb.RegisterRequest
	RegisterResponse = pb.RegisterResponse
	UserInfo         = pb.UserInfo

	UserSrv interface {
		Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	}

	defaultUserSrv struct {
		cli zrpc.Client
	}
)

func NewUserSrv(cli zrpc.Client) UserSrv {
	return &defaultUserSrv{
		cli: cli,
	}
}

func (m *defaultUserSrv) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	client := pb.NewUserSrvClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUserSrv) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := pb.NewUserSrvClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}
